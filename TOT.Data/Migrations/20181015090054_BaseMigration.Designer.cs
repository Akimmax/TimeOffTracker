// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TOT.Data;

namespace TOT.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20181015090054_BaseMigration")]
    partial class BaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TOT.Entities.Request_Entities.Check", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Manager");

                    b.Property<string>("Reason");

                    b.Property<DateTimeOffset>("SolvedDate");

                    b.Property<int?>("StatusId")
                        .IsRequired();

                    b.Property<int?>("TimeOffRequestId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("TimeOffRequestId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("TOT.Entities.Request_Entities.RequestStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RequestStatuses");

                    b.HasData(
                        new { Id = 1, Title = "Requsted" },
                        new { Id = 2, Title = "In progres" },
                        new { Id = 3, Title = "Denied" },
                        new { Id = 4, Title = "Accepted" }
                    );
                });

            modelBuilder.Entity("TOT.Entities.Request_Entities.TimeOffRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("EndTimeOffDate");

                    b.Property<string>("Note");

                    b.Property<DateTimeOffset>("StartTimeOffDate");

                    b.Property<int?>("TimeOffTypeId")
                        .IsRequired();

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.HasIndex("TimeOffTypeId");

                    b.ToTable("TimeOffRequests");
                });

            modelBuilder.Entity("TOT.Entities.Request_Entities.TimeOffType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("TimeOffTypes");
                });

            modelBuilder.Entity("TOT.Entities.Request_Entities.Check", b =>
                {
                    b.HasOne("TOT.Entities.Request_Entities.RequestStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TOT.Entities.Request_Entities.TimeOffRequest", "TimeOffRequest")
                        .WithMany("Checks")
                        .HasForeignKey("TimeOffRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TOT.Entities.Request_Entities.TimeOffRequest", b =>
                {
                    b.HasOne("TOT.Entities.Request_Entities.TimeOffType", "TimeOffType")
                        .WithMany()
                        .HasForeignKey("TimeOffTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
